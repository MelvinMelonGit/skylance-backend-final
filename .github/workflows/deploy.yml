name: Build and Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run OWASP Dependency-Check (SCA)
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "Skylance Backend"
          path: "."
          format: "ALL"
          out: "dependency-check-report"
        continue-on-error: true  # Don't fail the build

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: Set up Docker Buildx (for cross-platform builds)
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 -t tallmelon/skylance-backend-final:latest --push .

      - name: Deploy to DigitalOcean via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd /root
            docker pull tallmelon/skylance-backend-final:latest
            docker-compose down
            docker-compose up -d

      - name: Wait for the app to be up
        run: |
            for i in {1..20}; do
              STATUS=$(curl -skL -o /dev/null -w "%{http_code}" http://${{ secrets.DROPLET_IP }})
              if [[ "$STATUS" =~ ^2 ]]; then
                echo "App is up! Status: $STATUS"
                exit 0
              fi
              echo "Waiting for app... Last status: $STATUS"
              sleep 10
            done
            echo "App did not start in time, continuing anyway"
        continue-on-error: true

      - name: Run OWASP ZAP Baseline Scan (DAST)
        run: |
          docker run --rm -v ${{ github.workspace }}:/zap/wrk/:rw -t owasp/zap2docker-stable:2.13.0 \
          zap-baseline.py -t http://${{ secrets.DROPLET_IP }} -r /zap/wrk/zap_report.html -j /zap/wrk/zap_report.json --exitcode 0 --maxduration 600
        continue-on-error: true

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            zap_report.html
            zap_report.json