name: Build and Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run OWASP Dependency-Check (SCA)
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "Skylance Backend"
          path: "."
          format: "ALL"
          out: "dependency-check-report"
        continue-on-error: true  # Don't fail the build

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: Set up Docker Buildx (for cross-platform builds)
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image locally
        run: |
          docker buildx build --platform linux/amd64 -t tallmelon/skylance-backend-final:latest --load .

      - name: Run app container locally
        run: |
          docker run -d --rm -p 8080:80 tallmelon/skylance-backend-final:latest
          sleep 20

      - name: Run OWASP ZAP Baseline Scan (DAST) locally
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: "http://localhost:8080"
          cmd_options: "-a"
          fail_action: false
        continue-on-error: true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report_html.html

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push tallmelon/skylance-backend-final:latest

      - name: Deploy to DigitalOcean via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd /root
            docker pull tallmelon/skylance-backend-final:latest
            docker-compose down
            docker-compose up -d

      - name: Wait for app to be ready
        run: |
          for i in {1..20}; do
            status_code=$(curl -skL -o /dev/null -w "%{http_code}" http://${{ secrets.DROPLET_IP }}/)
            if [[ "$status_code" =~ ^2[0-9]{2}$ ]]; then
              echo "App is up! (Status: $status_code)"
              exit 0
            fi
            echo "Waiting for app... (Last status: $status_code)"
            sleep 10
          done
          echo "App did not start in time, continuing anyway"
        continue-on-error: true

      - name: Run Nikto Scan (DAST)
        run: |
          docker run --rm sullo/nikto -h http://${{ secrets.DROPLET_IP }}
        continue-on-error: true